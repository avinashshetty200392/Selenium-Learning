<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-JKEI96O7" ignored="0" name="Default test" tests="4" failures="0" timestamp="12 Oct 2019 20:09:20 GMT" time="44.827" errors="0">
  <testcase name="@AfterMethod takescreenshotAfterEachMethod" time="29.047" classname="testrunner.MethodCallingTest">
    <failure type="java.io.IOException" message="Destination &amp;apos;E:\Avinash\SoapUI\AutomationEclipse\SingletonClass\Screenshot&amp;apos; exists but is a directory">
      <![CDATA[java.io.IOException: Destination 'E:\Avinash\SoapUI\AutomationEclipse\SingletonClass\Screenshot' exists but is a directory
at org.apache.commons.io.FileUtils.doCopyFile(FileUtils.java:1118)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1076)
at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1028)
at utility.Common.getScreenShot(Common.java:35)
at testrunner.MethodCallingTest.takescreenshotAfterEachMethod(MethodCallingTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod takescreenshotAfterEachMethod -->
  <testcase name="@AfterMethod takescreenshotAfterEachMethod" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- @AfterMethod takescreenshotAfterEachMethod -->
  <testcase name="@AfterMethod takescreenshotAfterEachMethod" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- @AfterMethod takescreenshotAfterEachMethod -->
  <testcase name="@AfterMethod takescreenshotAfterEachMethod" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- @AfterMethod takescreenshotAfterEachMethod -->
  <testcase name="@AfterTest tearDown" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase name="launchApplication" time="15.74" classname="testrunner.MethodCallingTest"/>
  <testcase name="enterbookName" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- enterbookName -->
  <testcase name="clickOnSearchButton" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- clickOnSearchButton -->
  <testcase name="selectBookFromTheList" time="0.0" classname="testrunner.MethodCallingTest">
    <skipped/>
  </testcase> <!-- selectBookFromTheList -->
</testsuite> <!-- Default test -->
